TODO:
- Output encoders (Save + stream) => Done as in save to file and provide via tcpserversink
- Verify that other incoming formats (H264 with AAC audio) are working => H264 with vorbis is working (see below)
- Draw stuff onto the scene (logos, sprites, text on sprite, ...) => DONE! Enhancement: Maybe fade text in and out?
- Handle EOS properly (problem seems to exist in CamBox and VideoPlayer! => RECHECK
- Remove fading or make it optional => DONE! TODO: make that work via MIDI?
- Make the user interface localisable (by using tr() a little more often :)
- Support pipelines/sources/videos with only video or only audio. Maybe by using bins and listening to PadAdded events?
- Make all settings (resolution, framerate, audio sample rate, send destinations, ...) configurable
- Allow video effects to be applied (like gstreamer's agingtv or convert to black and white)
- Allow audio effects to be applied (lv2 host interface should give best flexibility)
- Optimize buffering time by using parameters for the tcpserversink like "sync-method", "burst-format" and finally "burst-value" => played with it, no good
- Add AudioMeters for MAIN and MONITOR out
- Add a "clear monitor" button in the "master" section
- Add a "new connection" dialog so the command line doesn't have to be used << !! NEXT !!

- Make sure all MIDI control stuff works
    TODO:   Next, prev video by < TRACK > buttons
            Make PLAY button blink on video paused

- Hook up the nanoKontrol's Transport buttons to the videoPlayer

- BUG: VideoPlayer: UNGO on pause doesn't work
- Add smartphone-compatible preview for a specific cam (webm-"stream" to embed on HTML-page OR works with VLC (adding sync-mode=latest-keyframe to
  output-directed tcpserversink makes the video play in VLC)

- Move all file selection dialogs to new threads!!!
- Basically the UI stuff and media stuff has to be in different threads since on regain-focus of the mainwindow, there are glitches (hearable audio dropouts and short video stall on the UI!


- BUG: Somehow a stream failed to start once since the dump file was still open:
Starting stream from "127.0.0.1:5006" "cam_01"
Pipeline: "appsrc name=source ! decodebin name=decode ! queue ! videoscale ! videoconvert ! videorate ! appsink name=videosink caps="video/x-raw,format=BGRA,width=640,height=360,framerate=25/1,pixel-aspect-ratio=1/1" decode. ! queue ! audioconvert ! audioresample ! appsink name=audiosink caps="audio/x-raw,format=F32LE,rate=48000,layout=interleaved,channels=2""
QFile::setFileName: File (/home/kripton/streaming/2015-01-15_19-07-52/aufnahmen//2015-13-15_19-13-40_cam_01.mkv) is already opened
SOURCE "cam_01" IS NOW ONLINE



- Add commands used to control certain v4l2 properties:
    - Analog to USB grabber: PAL instead of NTSC, brightness
    - C920: Autofocus off, manual focus setting, auto-brightness off, manual brightness control
    - RPi-Cam: Brightness, Recording LED off
- Add "software zoom" / frame cropping for each input
